{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst datetimePicker = document.getElementById('datetime-picker');\n\nlet userSelectedDate;\n\nfunction onClose(selectedDates) {\n  userSelectedDate = selectedDates[0];\n  const now = new Date();\n  if (userSelectedDate < now) {\n    startBtn.disabled = true;\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please choose a date in the future'\n    });\n  } else {\n    startBtn.disabled = false;\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  flatpickr('#datetime-picker', {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose: onClose\n  });\n});\n\nfunction addLeadingZero(value) {\n  return value < 10 ? '0' + value : value;\n}\n\nfunction updateTimer() {\n  const now = new Date().getTime();\n  const selectedDate = userSelectedDate.getTime();\n  let difference = selectedDate - now;\n  \n  if (difference <= 0) {\n    clearInterval(timerInterval);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(difference);\n  \n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nlet timerInterval;\n\nstartBtn.addEventListener('click', function() {\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n  updateTimer();\n  timerInterval = setInterval(updateTimer, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","datetimePicker","userSelectedDate","onClose","selectedDates","iziToast","flatpickr","addLeadingZero","value","updateTimer","now","difference","timerInterval","days","hours","minutes","seconds","convertMs","ms"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAEhE,IAAIC,EAEJ,SAASC,EAAQC,EAAe,CAC9BF,EAAmBE,EAAc,CAAC,EAE9BF,EADQ,IAAI,MAEdF,EAAS,SAAW,GACpBK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACf,CAAK,GAEDL,EAAS,SAAW,EAExB,CAEA,SAAS,iBAAiB,mBAAoB,UAAY,CACxDM,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASH,CACb,CAAG,CACH,CAAC,EAED,SAASI,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,CACpC,CAEA,SAASC,GAAc,CACrB,MAAMC,EAAM,IAAI,KAAM,EAAC,QAAO,EAE9B,IAAIC,EADiBT,EAAiB,UACNQ,EAEhC,GAAIC,GAAc,EAAG,CACnB,cAAcC,CAAa,EAC3B,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAU,EAE9D,SAAS,cAAc,aAAa,EAAE,YAAcJ,EAAeM,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcN,EAAeO,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcP,EAAeQ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcR,EAAeS,CAAO,CAC/E,CAEA,IAAIJ,EAEJZ,EAAS,iBAAiB,QAAS,UAAW,CAC5CA,EAAS,SAAW,GACpBC,EAAe,SAAW,GAC1BQ,IACAG,EAAgB,YAAYH,EAAa,GAAI,CAC/C,CAAC,EAED,SAASQ,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}